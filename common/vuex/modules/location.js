import AMap from 'AMap'import {getLocalJSON, setLocalJSON, setLocalStr,getLocalStr} from '../../utils/local'import apis from '../../apis/index'import Axios from 'axios'export default {  namespaced:true,  state(){    return {      address:null,      gdId:null    }  },  getters:{    address:state=>{      if (!state.address) {        state.address = getLocalJSON('address')      }      return state.address    },    gdId:state=>{      if (!state.gdId) {        state.gdId = getLocalStr('gdId')      }      return state.gdId    }  },  mutations:{    /*设置理理位置 */    AUTO_LOCATION (state,data) {      state.address = data; state.gdId = data.gdId    },    /*改变高德ID*/    CHANGE_GDID(state,data){      state.gdId = data    },  },  actions:{    AutoLoc({commit}){      let geolocation      // 定位      AMap.service('AMap.Geolocation',() => {        geolocation = new AMap.Geolocation({          lang: getLocalJSON('lang').LANGUAGE        })        geolocation.getCurrentPosition()        // 获取地理位置事件        AMap.event.addListener(geolocation, 'complete', (result) => {          AMap.service('AMap.Geocoder', () => {            let geocoder = new AMap.Geocoder({              radius: 1000,              extensions: 'all',              language: getLocalJSON('lang').LANGUAGE            })            geocoder.getAddress([result.position.lng, result.position.lat],  (status, result)=>{              if (status === 'complete' && result.info === 'OK') {                let {id} = result.regeocode.pois[0]                Axios({                  url: '//restapi.amap.com/v3/place/detail',                  methods: 'GET',                  params: {                    s: 'test',                    key: apis.GDKEY,                    language: getLocalJSON('lang').LANGUAGE,                    id:id                  }                }).then(result=>{                  let pois = result.data.pois[0]                  let addr = {}                  addr.gdId = pois.id                  addr.apartment = pois.name;                  addr.addrRoad = pois.address;                  addr.city = pois.cityname?pois.cityname:pois.pname                  addr.citycode = pois.citycode;                  addr.location = pois.location;                  commit('AUTO_LOCATION',addr)                  setLocalJSON('address',addr)                  setLocalStr('gdId',addr.gdId)                }, function () {                  window.location.href="/#/address/select"                })              } else {                window.location.href="/#/address/select"              }            })          })        })        AMap.event.addListener(geolocation, 'error', (err) => { //定位出错          window.location.href="/#/address/select"        })      })    },    GetLocByGdId({commit},gdId){      Axios({        url: '//restapi.amap.com/v3/place/detail',        methods: 'GET',        params: {          s: 'test',          key: apis.GDKEY,          language: getLocalJSON('lang').LANGUAGE,          id: gdId        }      }).then(function (result) {        let pois = result.data.pois[0]        let addr = {}        addr.gdId = pois.id        addr.apartment = pois.name;        addr.addrRoad = pois.address;        addr.city = pois.cityname?pois.cityname:pois.pname        addr.citycode = pois.citycode;        addr.location = pois.location;        commit('AUTO_LOCATION',addr)        setLocalJSON('address',addr)        setLocalStr('gdId',addr.gdId)      }, function () {        window.location.href="/#/address/select"      })    }  }}